[{"C:\\Users\\James\\Development\\offlinetv\\src\\index.tsx":"1","C:\\Users\\James\\Development\\offlinetv\\src\\reportWebVitals.ts":"2","C:\\Users\\James\\Development\\offlinetv\\src\\App.tsx":"3","C:\\Users\\James\\Development\\offlinetv\\src\\services\\memberService.tsx":"4","C:\\Users\\James\\Development\\offlinetv\\src\\components\\memberList.tsx":"5","C:\\Users\\James\\Development\\offlinetv\\src\\utils.ts":"6","C:\\Users\\James\\Development\\offlinetv\\src\\services\\twitchService.tsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":802,"mtime":1610410143644,"results":"11","hashOfConfig":"9"},{"size":328,"mtime":1610241053964,"results":"12","hashOfConfig":"9"},{"size":4766,"mtime":1610406860926,"results":"13","hashOfConfig":"9"},{"size":518,"mtime":1610359918012,"results":"14","hashOfConfig":"9"},{"size":574,"mtime":1610256020784,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1lmqwxs",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\James\\Development\\offlinetv\\src\\index.tsx",[],["33","34"],"C:\\Users\\James\\Development\\offlinetv\\src\\reportWebVitals.ts",[],"C:\\Users\\James\\Development\\offlinetv\\src\\App.tsx",[],"C:\\Users\\James\\Development\\offlinetv\\src\\services\\memberService.tsx",[],"C:\\Users\\James\\Development\\offlinetv\\src\\components\\memberList.tsx",["35","36","37","38","39","40"],"import * as React from 'react';\r\nimport { pause, mySort } from '../utils';\r\nimport { getMembers } from '../services/memberService';\r\nimport { getStreamer, getStream } from '../services/twitchService';\r\nimport { Stream } from '../types/Stream';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nexport interface MemberListProps {\r\n}\r\n \r\nexport interface MemberListState {\r\n  loading: boolean,\r\n  members: Array<any>\r\n}\r\n\r\nclass MemberList extends React.Component<MemberListProps, MemberListState> {\r\n  state = {\r\n    loading: true,\r\n    members: []\r\n  };\r\n  \r\n  _isMounted = false;\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  handleClick(url: string) {\r\n    window.open(url, \"_blank\");\r\n  }\r\n\r\n  // TODO: Refactor to be more abstract.\r\n  // getAPI = async () => {\r\n  //   for (let i=0; i<members.length; i++) {\r\n  //     if (members[i].stream.label.toLowerCase() === \"twitch\") {\r\n  //       const streamerData = await getStreamer(members[i].stream.id);\r\n  //       const streamData = await getStream(members[i].stream.id);\r\n\r\n  //       let stream: Stream = {};\r\n\r\n  //       if (streamerData !== null) {\r\n  //         stream.logo = streamerData.logo;\r\n  //       }\r\n\r\n  //       if (streamData !== null) {\r\n  //         stream.viewers = streamData.viewers;\r\n  //         stream.game = streamData.game;\r\n  //         stream.lastStream = streamData.created_at;\r\n  //         stream.title = streamData.channel.status;\r\n  //         stream.followers = streamData.channel.followers;\r\n\r\n  //         members[i].stream.live = true;\r\n  //       }\r\n\r\n  //       members[i].api = { ...members[i].api,  ...stream };\r\n  //     } else {\r\n  //       console.log(\"Skipping non-Twitch streamers...\");\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"Component starting to mount...\");\r\n\r\n    try {\r\n      this._isMounted = true;\r\n\r\n      // await pause(1);\r\n\r\n      // Get all members\r\n      let members = await getMembers();\r\n      // Get live members\r\n      let liveMembers = members.filter((member) => member.stream.live === true);\r\n      // Sort live members\r\n      mySort(liveMembers, \"api\", \"viewers\");\r\n      // Remove non-live members\r\n      members = members.filter((member) => member.stream.live === false);\r\n      // Sort non-live members by followers\r\n      mySort(members, \"api\", \"followers\");\r\n      // Merge live and non-live members\r\n      members = [ ...liveMembers, ...members ];\r\n\r\n      if (this._isMounted) {\r\n        console.log(\"Component mounted.\");\r\n        this.setState({ members, loading: false });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  populateList() {\r\n    const { members } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {members.map((member: any, index) => {\r\n          const { stream, api } = member;\r\n          const { live } = stream;\r\n          const { title } = api;\r\n          \r\n          let channelClass = \"channel no-select\";\r\n          if (live === true) {\r\n            channelClass += \" online\";\r\n          } else {\r\n            channelClass += \" offline\";\r\n          }\r\n\r\n          return (\r\n            <div \r\n              className={channelClass}\r\n              key={index}\r\n              onClick={() => this.handleClick(stream.url)}\r\n            >\r\n              <div className=\"avatar\">\r\n                <img\r\n                  className={stream.label.toLowerCase()}\r\n                  src={api.logo || \"/avatars/\" + stream.avatar}\r\n                  alt={member.alias.charAt(0)}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"details\">\r\n                <div className=\"ng\">\r\n                  <div className=\"name\">\r\n                    {member.alias}\r\n                  </div>\r\n                  <div className=\"game\">\r\n                    {live && api.game}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"stream-title-p\">\r\n                  <div className=\"stream-title\" title={title}>\r\n                    {live && title}\r\n                  </div>\r\n                </div>\r\n        \r\n                <div className=\"view-count\">\r\n                  {live && (api.viewers && api.viewers.toLocaleString())}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div id=\"spacer\"></div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  renderLoading() {\r\n    return (\r\n      <span id=\"loading-p\">\r\n        <span></span>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  render() { \r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        {loading\r\n          ? this.renderLoading()\r\n          : this.populateList()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MemberList;","C:\\Users\\James\\Development\\offlinetv\\src\\utils.ts",[],"C:\\Users\\James\\Development\\offlinetv\\src\\services\\twitchService.tsx",[],["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":15},{"ruleId":"47","severity":1,"message":"51","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":21},{"ruleId":"47","severity":1,"message":"52","line":4,"column":23,"nodeType":"49","messageId":"50","endLine":4,"endColumn":32},{"ruleId":"47","severity":1,"message":"53","line":5,"column":10,"nodeType":"49","messageId":"50","endLine":5,"endColumn":16},{"ruleId":"47","severity":1,"message":"54","line":6,"column":8,"nodeType":"49","messageId":"50","endLine":6,"endColumn":9},{"ruleId":"47","severity":1,"message":"55","line":7,"column":8,"nodeType":"49","messageId":"50","endLine":7,"endColumn":14},{"ruleId":"43","replacedBy":"56"},{"ruleId":"45","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"@typescript-eslint/no-unused-vars","'pause' is defined but never used.","Identifier","unusedVar","'getStreamer' is defined but never used.","'getStream' is defined but never used.","'Stream' is defined but never used.","'_' is defined but never used.","'moment' is defined but never used.",["58"],["59"],"no-global-assign","no-unsafe-negation"]